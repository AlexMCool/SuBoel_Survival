##############################################################################
#                    factory iconmenu changeproduct init                     #
##############################################################################
factory_iconmenu_changeproduct_init:
  command: /factory_iconmenu_changeproduct_init
  execute_mode: FROM_ANOTHER_COMMAND
  permission-required: false
  register: true
  type: RUN_AS_OPERATOR
  runcmd:
  #######################################
  #                wait                 #
  ####################################### 
  # arg1 = $s.factory.id.$arg1.tp.x 
  # arg2 = $s.factory.id.$arg1.tp.y 
  # arg3 = $s.factory.id.$arg1.tp.z 
  # arg4 = $s.factory.id.$arg1.level.next 
  # arg5 = $s.factory.id.$arg1.status 
  # arg6 = $s.factory.id.$arg1.location.x 
  # arg7 = $s.factory.id.$arg1.location.y
  # arg8 = $s.factory.id.$arg1.location.z 
  # arg9 = $PlayerData%$s.factory.factory_id.$arg1.id%
  # arg10 = $PlayerData%$s.factory.factory_id.$arg1.tp.rot%
  # arg11 = upgrade / noupgrade
  - '$Script$%if%$s.factory.id.$arg9.product.min_time>$s.general.time'
  
  # set var to minutes left var
  - '$Script$%PlayerData%$s.init.factory.change_delay.calculation=$s.factory.id.$arg9.product.min_time'
  - '$Script$%PlayerData%$s.init.factory.change_delay.calculation-$s.general.time'
  # 1200 ticks in a minute
  - '$Script$%PlayerData%$s.init.factory.change_delay.calculation/1200'
  
  # calculate minutes and seconds left
  - '/mycommand:factory_iconmenu_changeproduct_init_time $player'   
  
  # "[Factory] You need to wait x minute(s) and x second(s) to be able to change the item of this factory again"
  - '/minecraft:tellraw $player [{"bold":"true","color":"dark_aqua","text":"["},{"bold":"false","color":"white","text":"Factory"},{"bold":"true","color":"dark_aqua","text":"]"},{"bold":"false","color":"gray","text":" You need to wait"},{"bold":"false","color":"dark_aqua","text":" $PlayerData%$s.init.factory.change_delay.rounded.minutes%"},{"bold":"false","color":"gray","text":" minute(s) and"},{"bold":"false","color":"dark_aqua","text":" $PlayerData%$s.init.factory.change_delay.rounded.seconds%"},{"bold":"false","color":"gray","text":" second(s) to be able to change the item of this factory again"}]'

  #######################################
  #              low level              #
  ####################################### 
  # arg1 = $s.factory.id.$arg1.tp.x 
  # arg2 = $s.factory.id.$arg1.tp.y 
  # arg3 = $s.factory.id.$arg1.tp.z 
  # arg4 = $s.factory.id.$arg1.level.next 
  # arg5 = $s.factory.id.$arg1.status 
  # arg6 = $s.factory.id.$arg1.location.x 
  # arg7 = $s.factory.id.$arg1.location.y
  # arg8 = $s.factory.id.$arg1.location.z 
  # arg9 = $PlayerData%$s.factory.factory_id.$arg1.id%
  # arg10 = $PlayerData%$s.factory.factory_id.$arg1.tp.rot%  
  # arg11 = upgrade / noupgrade
  
  # if holding item is air
  - '$Script$%if%$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==AIR' 
  # "[Factory] You need to have the product you want to produce in your hand"
  - '/minecraft:tellraw $player [{"bold":"true","color":"$s.style.color.mark","text":"["},{"bold":"false","color":"$s.style.color.title","text":"Factory"},{"bold":"true","color":"$s.style.color.mark","text":"]"},{"bold":"false","color":"$s.style.color.normal","text":" You need to have the product you want to produce in your hand"}]'
  
  # if holding item is illegal
  - '$Script$%if%$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==ENCHANTED_BOOK<and>$iteminhand!=AIR<or>$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==LINGERING_POTION<and>$iteminhand!=AIR<or>$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==POTION<and>$iteminhand!=AIR<or>$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==MONSTER_EGG<and>$iteminhand!=AIR<or>$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==SPLASH_POTION<and>$iteminhand!=AIR<or>$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand==TIPPED_ARROW<and>$iteminhand!=AIR'
  # "[Factory] The product you're holding cannot be produced"
  - '/minecraft:tellraw $player [{"bold":"true","color":"$s.style.color.mark","text":"["},{"bold":"false","color":"$s.style.color.title","text":"Factory"},{"bold":"true","color":"$s.style.color.mark","text":"]"},{"bold":"false","color":"$s.style.color.normal","text":" The product you''re holding cannot be produced"}]'
  
  # if holding item is allowed
  - '$Script$%if%$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$iteminhand!=AIR<and>$iteminhand!=ENCHANTED_BOOK<and>$iteminhand!=LINGERING_POTION<and>$iteminhand!=POTION<and>$iteminhand!=MONSTER_EGG<and>$iteminhand!=SPLASH_POTION<and>$iteminhand!=TIPPED_ARROW'
  # verification code
  - '$Script$%Variable%$s.general.code=$GetRandomStringFromList%a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z%$GetRandomStringFromList%0;1;2;3;4;5;6;7;8;9%$GetRandomStringFromList%1;2;3;4;5;6;7;8;9;0%$GetRandomStringFromList%2;3;4;5;6;7;8;9;0;1%$GetRandomStringFromList%b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;a%$GetRandomStringFromList%~;|;];[;{;};(;);*;^;$;#;@;!;?;\;¡;²;³;¤;€%$GetRandomStringFromList%3;4;5;6;7;8;9;0;1;2%$GetRandomStringFromList%4;5;6;7;8;9;0;1;2;3%$GetRandomStringFromList%c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;a;b%$GetRandomStringFromList%|;];[;{;};(;);*;^;$;#;@;!;?;\;¡;²;³;¤;€;~%'
  # init holding item
  - '/mycommand:code holding_init $s.general.code $player'
  # messages with item (which is not illegal) known
  - '/mycommand:factory_iconmenu_changeproduct_withproduct $multiargs $PlayerData%$s.init.product.name% $PlayerData%$s.init.product.damage%'
  

  
  
    
##############################################################################
#                 factory iconmenu changeproduct withproduct                 #
##############################################################################
factory_iconmenu_changeproduct_withproduct:
  command: /factory_iconmenu_changeproduct_withproduct
  execute_mode: FROM_ANOTHER_COMMAND
  permission-required: false
  register: true
  type: RUN_AS_OPERATOR
  runcmd:
  #######################################
  #              low level              #
  ####################################### 
  # arg1 = $s.factory.id.$arg1.tp.x 
  # arg2 = $s.factory.id.$arg1.tp.y 
  # arg3 = $s.factory.id.$arg1.tp.z 
  # arg4 = $s.factory.id.$arg1.level.next 
  # arg5 = $s.factory.id.$arg1.status 
  # arg6 = $s.factory.id.$arg1.location.x 
  # arg7 = $s.factory.id.$arg1.location.y
  # arg8 = $s.factory.id.$arg1.location.z 
  # arg9 = $PlayerData%$s.factory.factory_id.$arg1.id%
  # arg10 = $PlayerData%$s.factory.factory_id.$arg1.tp.rot%  
  # arg11 = upgrade / noupgrade
  # arg12 = $PlayerData%$s.init.product.name% 
  # arg13 = $PlayerData%$s.init.product.damage%
  - '$Script$%if%$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$s.factory.id.$arg9.level.current<$s.product.minimum_level.$arg12:$arg13'
  
  # "[Factory] The factory has to be at least level x to change the product to x"
  - '/minecraft:tellraw $player [{"bold":"true","color":"dark_aqua","text":"["},{"bold":"false","color":"white","text":"Factory"},{"bold":"true","color":"dark_aqua","text":"]"},{"bold":"false","color":"gray","text":" The factory has to be at least level"},{"bold":"false","color":"dark_aqua","text":" $s.product.minimum_level.$arg12:$arg13"},{"bold":"false","color":"gray","text":" to change the product to"},{"bold":"false","color":"dark_aqua","text":" $s.translation.$arg12:$arg13"}]'
  
  #######################################
  #            same product             #
  ####################################### 
  # arg1 = $s.factory.id.$arg1.tp.x 
  # arg2 = $s.factory.id.$arg1.tp.y 
  # arg3 = $s.factory.id.$arg1.tp.z 
  # arg4 = $s.factory.id.$arg1.level.next 
  # arg5 = $s.factory.id.$arg1.status 
  # arg6 = $s.factory.id.$arg1.location.x 
  # arg7 = $s.factory.id.$arg1.location.y
  # arg8 = $s.factory.id.$arg1.location.z 
  # arg9 = $PlayerData%$s.factory.factory_id.$arg1.id%
  # arg10 = $PlayerData%$s.factory.factory_id.$arg1.tp.rot%  
  # arg11 = upgrade / noupgrade
  # arg12 = $PlayerData%$s.init.product.name% 
  # arg13 = $PlayerData%$s.init.product.damage%
  - '$Script$%if%$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$s.factory.id.$arg9.product.name:$s.factory.id.$arg9.product.damage==$arg12:$arg13<and>$s.factory.id.$arg9.level.current>=$s.product.minimum_level.$arg12:$arg13'
  
  # "[Factory] The factory is already producing x"
  - '/minecraft:tellraw $player [{"bold":"true","color":"dark_aqua","text":"["},{"bold":"false","color":"white","text":"Factory"},{"bold":"true","color":"dark_aqua","text":"]"},{"bold":"false","color":"gray","text":" The factory is already producing"},{"bold":"false","color":"dark_aqua","text":" $s.translation.$arg12:$arg13"}]'
  
  #######################################
  #            everything ok            #
  ####################################### 
  # arg1 = $s.factory.id.$arg1.tp.x 
  # arg2 = $s.factory.id.$arg1.tp.y 
  # arg3 = $s.factory.id.$arg1.tp.z 
  # arg4 = $s.factory.id.$arg1.level.next 
  # arg5 = $s.factory.id.$arg1.status 
  # arg6 = $s.factory.id.$arg1.location.x 
  # arg7 = $s.factory.id.$arg1.location.y
  # arg8 = $s.factory.id.$arg1.location.z 
  # arg9 = $PlayerData%$s.factory.factory_id.$arg1.id%
  # arg10 = $PlayerData%$s.factory.factory_id.$arg1.tp.rot%  
  # arg11 = upgrade / noupgrade
  # arg12 = $PlayerData%$s.init.product.name% 
  # arg13 = $PlayerData%$s.init.product.damage%
  - '$Script$%if%$s.factory.id.$arg9.product.min_time<=$s.general.time<and>$s.factory.id.$arg9.product.name:$s.factory.id.$arg9.product.damage!=$arg12:$arg13<and>$s.factory.id.$arg9.level.current>=$s.product.minimum_level.$arg12:$arg13'
  
  # open confirmation menu
  - '$delay$<2>/factory_iconmenu_changeproduct $multiargs'
  
  
  
  
  
##############################################################################
#                  factory iconmenu changeproduct init time                  #
##############################################################################
factory_iconmenu_changeproduct_init_time:
  command: /factory_iconmenu_changeproduct_init_time
  execute_mode: FROM_ANOTHER_COMMAND
  permission-required: false
  register: true
  type: RUN_CONSOLE
  runcmd:
  # arg1 = $player
  
  # reset rounded minutes
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes=0'
  # calculate rounded minutes
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=64'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-64'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+64'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=32'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-32'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+32'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=16'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-16'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+16'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=8'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-8'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+8'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=4'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-4'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+4'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=2'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-2'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+2'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=1'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-1'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.minutes+1'
  
  # calculate seconds (60 = how many seconds in a minute)
  - '$Script$%if%always==always'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation*60'
  # reset rounded seconds
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds=0'
  # calculate rounded seconds
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=64'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-64'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+64'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=32'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-32'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+32'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=16'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-16'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+16'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=8'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-8'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+8'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=4'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-4'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+4'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=2'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-2'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+2'
  - '$Script$%if%$PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation%>=1'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.calculation-1'
  - '$Script$%PlayerDataFor%$arg1%$s.init.factory.change_delay.rounded.seconds+1'
  
  
  
  
  
##############################################################################
#                       factory iconmenu changeproduct                       #
##############################################################################
factory_iconmenu_changeproduct:
  command: /factory_iconmenu_changeproduct
  execute_mode: FROM_ANOTHER_COMMAND
  iconmenu_size: 9
  iconmenu_title: '&$s.translation.color.$s.style.color.mark&l[&$s.translation.color.$s.style.color.titleAre You Sure?&$s.translation.color.$s.style.color.mark&l]'
  permission-required: false
  register: true
  type: ICON_MENU
  iconmenu_commands:
  # arg1 = $s.factory.id.$arg1.tp.x 
  # arg2 = $s.factory.id.$arg1.tp.y 
  # arg3 = $s.factory.id.$arg1.tp.z 
  # arg4 = $s.factory.id.$arg1.level.next 
  # arg5 = $s.factory.id.$arg1.status 
  # arg6 = $s.factory.id.$arg1.location.x 
  # arg7 = $s.factory.id.$arg1.location.y
  # arg8 = $s.factory.id.$arg1.location.z 
  # arg9 = $PlayerData%$s.factory.factory_id.$arg1.id%
  # arg10 = $PlayerData%$s.factory.factory_id.$arg1.tp.rot%
  # arg11 = upgrade / noupgrade
  # arg12 = $PlayerData%$s.init.product.name% 
  # arg13 = $PlayerData%$s.init.product.damage%
  
  # {Command:"/mycommand:code_menu factory_item_change $s.general.code $arg9 $player $s.factory.id.$arg9.level.current $arg12 $arg13"}
  - '2:WOOL:5:/mycommand$s.char.coloncode_menu factory_item_change $s.general.code $arg9 $player $s.factory.id.$arg9.level.current $arg12 $arg13:&$s.translation.color.$s.style.color.mark&l<&$s.translation.color.$s.style.color.light_mark&m---&$s.translation.color.$s.style.color.mark&l[&$s.translation.color.$s.style.color.titleYes&$s.translation.color.$s.style.color.mark&l]&$s.translation.color.$s.style.color.light_mark&m---&$s.translation.color.$s.style.color.mark&l>:&$s.translation.color.$s.style.color.mark> &$s.translation.color.$s.style.color.normalChange the product to;  &$s.translation.color.$s.style.color.mark$s.translation.$arg12$s.char.colon$arg13;&$s.translation.color.$s.style.color.mark> &$s.translation.color.$s.style.color.normalThis can only be done every;  &$s.translation.color.$s.style.color.normalhour'
  # {Command:"/mycommand:code_openmenu factory_iconmenu_x_actions $s.general.code $arg11 $arg1 $arg2 $arg3 $arg4 $arg5 $arg6 $arg7 $arg8 $arg9 $arg10"}
  - '6:WOOL:14:/mycommand$s.char.coloncode_openmenu factory_iconmenu_x_actions $s.general.code $arg11 $arg1 $arg2 $arg3 $arg4 $arg5 $arg6 $arg7 $arg8 $arg9 $arg10:&$s.translation.color.$s.style.color.mark&l<&$s.translation.color.$s.style.color.light_mark&m---&$s.translation.color.$s.style.color.mark&l[&$s.translation.color.$s.style.color.titleNo&$s.translation.color.$s.style.color.mark&l]&$s.translation.color.$s.style.color.light_mark&m---&$s.translation.color.$s.style.color.mark&l>:&$s.translation.color.$s.style.color.mark> &$s.translation.color.$s.style.color.normalCancel changing the;  &$s.translation.color.$s.style.color.normalproduct'
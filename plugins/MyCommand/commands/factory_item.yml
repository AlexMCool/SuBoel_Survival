##############################################################################
#                                factory item                                #
##############################################################################
factory_item:
  command: /factory_item
  type: RUN_CONSOLE
  register: true
  runcmd: 
  # arg1 = (factory_id)
  
  # find closest hopper where there can be a new item
  - '$Script$%Variable%$s.factory.init.order_number=0'
  - '/mycommand:factory_item_hopper $arg1 $s.factory.init.order_number'
  
  
  
  
  
##############################################################################
#                            factory item hopper                             #
##############################################################################
factory_item_hopper:
  command: /factory_item_hopper
  type: RUN_CONSOLE
  register: true
  runcmd:
  # arg1 = (factory_id)
  # arg2 = (order_number)
  
  # set score to 0 if hopper has space, set score to 1 if hopper is full
  - '/minecraft:execute @e[name=sfHopperChain,tag=sfID$arg1,type=area_effect_cloud] ~ ~ ~ /minecraft:execute @s[tag=sfOrder$arg2] ~ ~ ~ /minecraft:function suboel:factory/hoppers'
  
  # add item to blockdata
  - '/minecraft:execute @e[name=sfHopperChain,tag=sfID$arg1,type=area_effect_cloud] ~ ~ ~ /minecraft:execute @s[score_sfHopper=0,tag=sfOrder$arg2] ~ ~ ~ /minecraft:blockdata ~ ~ ~ {Items:[{Count:1b,Damage:$s.factory.id.$arg1.item.damage,id:"minecraft:$s.factory.id.$arg1.item.name",Slot:0b}]}'
  # reset score
  - '/minecraft:execute @e[name=sfHopperChain,tag=sfID$arg1,type=area_effect_cloud] ~ ~ ~ /minecraft:scoreboard players reset @s[score_sfHopper=0,tag=sfOrder$arg2] sfHopper'
  
  # recur
  - '/minecraft:execute @e[name=sfHopperChain,tag=sfID$arg1,type=area_effect_cloud] ~ ~ ~ /minecraft:execute @s[score_sfHopper_min=1,tag=sfOrder$arg2] ~ ~ ~ /mycommand:factory_item_recur $arg1 $arg2'
  
  
  
  
  
##############################################################################
#                             factory item recur                             #
##############################################################################
factory_item_recur:
  command: /factory_item_recur
  type: RUN_CONSOLE
  register: true
  delaytimer: 1
  delaytimer_format: TICKS
  runcmd:
  # arg1 = (factory_id)
  # arg2 = (order_number)
  
  # reset score
  - '$delay$/minecraft:execute @e[name=sfHopperChain,tag=sfID$arg1,type=area_effect_cloud] ~ ~ ~ /minecraft:scoreboard players reset @s[tag=sfOrder$arg2] sfHopper'
  
  # add 1 to variable
  - '$Script$%Variable%$s.factory.init.order_number+1'
  
  # recur
  - '$delay$/mycommand:factory_item_hopper $arg1 $s.factory.init.order_number'

  
  
  
  
##############################################################################
#                            factory item change                             #
##############################################################################
factory_item_change:
  command: /factory_item_change
  type: RUN_AS_OPERATOR
  register: true
  runcmd:
  # arg1 = (factory_id)
  # arg2 = (factory_owner)
  # arg3 = (factory_level)
  # arg4 = (item_name)
  # arg5 = (damage_value)
  
  # set correct delay
  - '/mycommand:factory_item_delay_init $arg1 $arg2 $arg3 $arg4 $arg5'
  
  # set variables for factory
  - '$Script$%Variable%$s.factory.id.$arg1.item.damage=$arg5'
  - '$Script$%Variable%$s.factory.id.$arg1.item.name=$arg4'
  # manage cooldown
  - '/mycommand:factory_item_change_delay $arg1 $s.time'
  
  # "[Factory] The factory will now produce x"
  - '/minecraft:tellraw $player [{"bold":"true","color":"dark_aqua","text":"["},{"bold":"false","color":"white","text":"Factory"},{"bold":"true","color":"dark_aqua","text":"]"},{"bold":"false","color":"gray","text":" The factory will now produce"},{"bold":"false","color":"dark_aqua","text":" $s.translation.$arg4:$arg5"}]'
  
  
  
  
  
##############################################################################
#                            factory item change                             #
##############################################################################
factory_item_change_delay:
  command: /factory_item_change_delay
  type: RUN_AS_OPERATOR
  register: true
  runcmd:
  # arg1 = (factory_id)
  # arg2 = $s.time (for some reason just "$s.time" didn't work, but when it's in a arg value, it does)
  
  # manage cooldown
  - '$Script$%Variable%$s.factory.id.$arg1.item.min_time=$arg2'
  - '$Script$%Variable%$s.factory.id.$arg1.item.min_time+72000'
